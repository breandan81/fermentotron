   1               		.file	"analogIO.cpp"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               	.global	_Z6getPins
  11               	_Z6getPins:
  12               	.LFB2:
  13               		.file 1 "analogIO.cpp"
   1:analogIO.cpp  **** #include "avrthing.h"
   2:analogIO.cpp  **** #include "analogIO.h"
   3:analogIO.cpp  **** #include <avr/io.h>
   4:analogIO.cpp  **** #include <avr/wdt.h>
   5:analogIO.cpp  **** #include <avr/power.h>
   6:analogIO.cpp  **** #include <avr/interrupt.h>
   7:analogIO.cpp  **** #include <stdio.h>
   8:analogIO.cpp  **** 
   9:analogIO.cpp  **** /*Hardware dependent, translates a pin on the package to the bits that need to be written to ADMUX
  10:analogIO.cpp  **** this is written for the AWESOMEDIP
  11:analogIO.cpp  **** 
  12:analogIO.cpp  **** returns -1 if pin is invalid
  13:analogIO.cpp  **** 
  14:analogIO.cpp  **** AD Channel	Port Pin	AwesomeDIP Pin
  15:analogIO.cpp  **** 		
  16:analogIO.cpp  **** AD0		PF0		38
  17:analogIO.cpp  **** AD1		PF1		37
  18:analogIO.cpp  **** AD2		none		
  19:analogIO.cpp  **** AD3		none
  20:analogIO.cpp  **** AD4		PF4		36
  21:analogIO.cpp  **** AD5		PF5		35
  22:analogIO.cpp  **** AD6		PF6		34
  23:analogIO.cpp  **** AD7		PF7		33
  24:analogIO.cpp  **** AD8		PD4		22
  25:analogIO.cpp  **** AD9		PD6		23
  26:analogIO.cpp  **** AD10		PD7		24
  27:analogIO.cpp  **** AD11		PB4		25
  28:analogIO.cpp  **** AD12		PB5		26
  29:analogIO.cpp  **** AD13		PB6		27
  30:analogIO.cpp  **** */
  31:analogIO.cpp  **** 
  32:analogIO.cpp  **** short getPin(short me)
  33:analogIO.cpp  **** {
  14               		.loc 1 33 0
  15               	.LVL0:
  16               	/* prologue: function */
  17               	/* frame size = 0 */
  18               	/* stack size = 0 */
  19               	.L__stack_usage = 0
  20 0000 4697      		sbiw r24,22
  21               	.LVL1:
  22 0002 8131      		cpi r24,17
  23 0004 9105      		cpc r25,__zero_reg__
  24 0006 00F4      		brsh .L3
  34:analogIO.cpp  **** 	switch(me)
  35:analogIO.cpp  **** 	{
  36:analogIO.cpp  **** 		case 38: return 0; //ADC0
  37:analogIO.cpp  **** 		case 37: return 1; //ADC1
  38:analogIO.cpp  **** 		case 36: return 4; //ADC4
  39:analogIO.cpp  **** 		case 35: return 5; //ADC5
  40:analogIO.cpp  **** 		case 34: return 6; //ADC6
  41:analogIO.cpp  **** 		case 33: return 7; //ADC7
  42:analogIO.cpp  **** 		case 22: return 32; //ADC8
  43:analogIO.cpp  **** 		case 23: return 33; //ADC9
  44:analogIO.cpp  **** 		case 24: return 34; //adc10
  45:analogIO.cpp  **** 		case 25: return 35; //adc11
  46:analogIO.cpp  **** 		case 26: return 36; //adc12
  47:analogIO.cpp  **** 		case 27: return 37; //adc13
  48:analogIO.cpp  **** 	}
  49:analogIO.cpp  **** 	return -1;
  50:analogIO.cpp  **** }
  51:analogIO.cpp  **** 
  52:analogIO.cpp  **** void setRef(short me)
  53:analogIO.cpp  **** {
  54:analogIO.cpp  **** 	ADMUX = (ADMUX &(0x3F)) | ((char)me<<6);
  55:analogIO.cpp  **** }
  56:analogIO.cpp  **** void setRefInternal()
  57:analogIO.cpp  **** {
  58:analogIO.cpp  **** 	setRef(3);
  59:analogIO.cpp  **** }
  60:analogIO.cpp  **** void setRefExternal()
  61:analogIO.cpp  **** {
  62:analogIO.cpp  **** 	setRef(0);
  63:analogIO.cpp  **** }
  64:analogIO.cpp  **** void setRefVCC()
  65:analogIO.cpp  **** {
  66:analogIO.cpp  **** 	setRef(1);
  67:analogIO.cpp  **** }
  68:analogIO.cpp  **** short setPin(short me)
  69:analogIO.cpp  **** {
  70:analogIO.cpp  **** 	short pin = getPin(me);
  71:analogIO.cpp  **** 	if(pin < 0)
  72:analogIO.cpp  **** 		return -1;
  73:analogIO.cpp  **** 	else
  74:analogIO.cpp  **** 	{
  75:analogIO.cpp  **** 		ADMUX = (ADMUX & 0xC0) | (pin&0x0F);
  76:analogIO.cpp  **** 		if(pin & 0xF0)
  77:analogIO.cpp  **** 		{
  78:analogIO.cpp  **** 			ADCSRB |= _BV(MUX5);
  79:analogIO.cpp  **** 		}
  80:analogIO.cpp  **** 		else
  81:analogIO.cpp  **** 		{
  82:analogIO.cpp  **** 			ADCSRB &= ~_BV(MUX5);
  83:analogIO.cpp  **** 		}
  84:analogIO.cpp  **** 	}
  85:analogIO.cpp  **** 	return pin;
  86:analogIO.cpp  **** }
  87:analogIO.cpp  **** short setThermo()
  88:analogIO.cpp  **** {
  89:analogIO.cpp  **** 	setRefInternal();
  90:analogIO.cpp  **** 
  91:analogIO.cpp  ****         short pin = 39;
  92:analogIO.cpp  ****         if(pin < 0)
  93:analogIO.cpp  ****                 return -1;
  94:analogIO.cpp  ****         else
  95:analogIO.cpp  ****         {
  96:analogIO.cpp  ****                 ADMUX = (ADMUX & 0xC0) | (pin&0x0F);
  97:analogIO.cpp  ****                 if(pin & 0xF0)
  98:analogIO.cpp  ****                 {
  99:analogIO.cpp  ****                         ADCSRB |= _BV(MUX5);
 100:analogIO.cpp  ****                 }
 101:analogIO.cpp  ****                 else
 102:analogIO.cpp  ****                 {
 103:analogIO.cpp  ****                         ADCSRB &= ~_BV(MUX5);
 104:analogIO.cpp  ****                 }
 105:analogIO.cpp  ****         }
 106:analogIO.cpp  ****         return pin;
 107:analogIO.cpp  **** 
 108:analogIO.cpp  **** }
 109:analogIO.cpp  **** 
 110:analogIO.cpp  **** short convert()
 111:analogIO.cpp  **** {
 112:analogIO.cpp  **** 	ADCSRA |= 1 << ADEN; //enable ADC
 113:analogIO.cpp  **** 	ADCSRA |= 1 << ADSC; //begin a conversion
 114:analogIO.cpp  **** 
 115:analogIO.cpp  **** 	
 116:analogIO.cpp  **** 	while(ADCSRA & (1 << ADSC))
 117:analogIO.cpp  **** 	{}
 118:analogIO.cpp  **** 	short result = ADCL;
 119:analogIO.cpp  **** 	result |= ADCH<<8;
 120:analogIO.cpp  **** 	
 121:analogIO.cpp  **** 	ADCSRA &= ~(1<<ADEN);
 122:analogIO.cpp  **** 	return result;
 123:analogIO.cpp  **** }
 124:analogIO.cpp  **** 
 125:analogIO.cpp  **** void analogSetup()
 126:analogIO.cpp  **** {
 127:analogIO.cpp  **** 	ADCSRA |= (1 << ADPS2) | (1 << ADPS1) | (1 << ADPS0); 
 128:analogIO.cpp  **** 	setRefInternal();
 129:analogIO.cpp  **** }
 130:analogIO.cpp  **** short analogRead(short me)
 131:analogIO.cpp  **** {
 132:analogIO.cpp  **** 	if(setPin(me)<0)
 133:analogIO.cpp  **** 		return -1;
 134:analogIO.cpp  **** 
 135:analogIO.cpp  **** 	short result = convert();
 136:analogIO.cpp  **** 	return result;
 137:analogIO.cpp  **** }
  25               		.loc 1 137 0
  26 0008 FC01      		movw r30,r24
  27 000a E050      		subi r30,lo8(-(CSWTCH.4))
  28 000c F040      		sbci r31,hi8(-(CSWTCH.4))
  29 000e 2081      		ld r18,Z
  30 0010 3327      		clr r19
  31 0012 27FD      		sbrc r18,7
  32 0014 3095      		com r19
  33 0016 00C0      		rjmp .L2
  34               	.L3:
  34:analogIO.cpp  **** 	switch(me)
  35               		.loc 1 34 0
  36 0018 2FEF      		ldi r18,lo8(-1)
  37 001a 3FEF      		ldi r19,lo8(-1)
  38               	.L2:
  50:analogIO.cpp  **** }
  39               		.loc 1 50 0
  40 001c C901      		movw r24,r18
  41               	.LVL2:
  42 001e 0895      		ret
  43               	.LFE2:
  45               	.global	_Z6setRefs
  47               	_Z6setRefs:
  48               	.LFB3:
  53:analogIO.cpp  **** {
  49               		.loc 1 53 0
  50               	.LVL3:
  51               	/* prologue: function */
  52               	/* frame size = 0 */
  53               	/* stack size = 0 */
  54               	.L__stack_usage = 0
  54:analogIO.cpp  **** 	ADMUX = (ADMUX &(0x3F)) | ((char)me<<6);
  55               		.loc 1 54 0
  56 0020 ECE7      		ldi r30,lo8(124)
  57 0022 F0E0      		ldi r31,0
  58 0024 9081      		ld r25,Z
  59 0026 8295      		swap r24
  60               	.LVL4:
  61 0028 880F      		lsl r24
  62 002a 880F      		lsl r24
  63 002c 807C      		andi r24,lo8(-64)
  64 002e 9F73      		andi r25,lo8(63)
  65 0030 892B      		or r24,r25
  66 0032 8083      		st Z,r24
  67 0034 0895      		ret
  68               	.LFE3:
  70               	.global	_Z14setRefInternalv
  72               	_Z14setRefInternalv:
  73               	.LFB4:
  57:analogIO.cpp  **** {
  74               		.loc 1 57 0
  75               	/* prologue: function */
  76               	/* frame size = 0 */
  77               	/* stack size = 0 */
  78               	.L__stack_usage = 0
  58:analogIO.cpp  **** 	setRef(3);
  79               		.loc 1 58 0
  80 0036 83E0      		ldi r24,lo8(3)
  81 0038 90E0      		ldi r25,0
  82 003a 0C94 0000 		jmp _Z6setRefs
  83               	.LVL5:
  84               	.LFE4:
  86               	.global	_Z14setRefExternalv
  88               	_Z14setRefExternalv:
  89               	.LFB5:
  61:analogIO.cpp  **** {
  90               		.loc 1 61 0
  91               	/* prologue: function */
  92               	/* frame size = 0 */
  93               	/* stack size = 0 */
  94               	.L__stack_usage = 0
  62:analogIO.cpp  **** 	setRef(0);
  95               		.loc 1 62 0
  96 003e 80E0      		ldi r24,0
  97 0040 90E0      		ldi r25,0
  98 0042 0C94 0000 		jmp _Z6setRefs
  99               	.LVL6:
 100               	.LFE5:
 102               	.global	_Z9setRefVCCv
 104               	_Z9setRefVCCv:
 105               	.LFB6:
  65:analogIO.cpp  **** {
 106               		.loc 1 65 0
 107               	/* prologue: function */
 108               	/* frame size = 0 */
 109               	/* stack size = 0 */
 110               	.L__stack_usage = 0
  66:analogIO.cpp  **** 	setRef(1);
 111               		.loc 1 66 0
 112 0046 81E0      		ldi r24,lo8(1)
 113 0048 90E0      		ldi r25,0
 114 004a 0C94 0000 		jmp _Z6setRefs
 115               	.LVL7:
 116               	.LFE6:
 118               	.global	_Z6setPins
 120               	_Z6setPins:
 121               	.LFB7:
  69:analogIO.cpp  **** {
 122               		.loc 1 69 0
 123               	.LVL8:
 124               	/* prologue: function */
 125               	/* frame size = 0 */
 126               	/* stack size = 0 */
 127               	.L__stack_usage = 0
 128               	.LBB2:
  70:analogIO.cpp  **** 	short pin = getPin(me);
 129               		.loc 1 70 0
 130 004e 0E94 0000 		call _Z6getPins
 131               	.LVL9:
 132 0052 9C01      		movw r18,r24
 133               	.LVL10:
  71:analogIO.cpp  **** 	if(pin < 0)
 134               		.loc 1 71 0
 135 0054 97FD      		sbrc r25,7
 136 0056 00C0      		rjmp .L11
  75:analogIO.cpp  **** 		ADMUX = (ADMUX & 0xC0) | (pin&0x0F);
 137               		.loc 1 75 0
 138 0058 4091 7C00 		lds r20,124
 139 005c 8F70      		andi r24,15
 140 005e 9927      		clr r25
 141 0060 407C      		andi r20,lo8(-64)
 142 0062 482B      		or r20,r24
 143 0064 4093 7C00 		sts 124,r20
  76:analogIO.cpp  **** 		if(pin & 0xF0)
 144               		.loc 1 76 0
 145 0068 C901      		movw r24,r18
 146 006a 807F      		andi r24,240
 147 006c 9927      		clr r25
 148 006e 892B      		or r24,r25
 149 0070 01F0      		breq .L10
  78:analogIO.cpp  **** 			ADCSRB |= _BV(MUX5);
 150               		.loc 1 78 0
 151 0072 8091 7B00 		lds r24,123
 152 0076 8062      		ori r24,lo8(32)
 153 0078 00C0      		rjmp .L12
 154               	.L10:
  82:analogIO.cpp  **** 			ADCSRB &= ~_BV(MUX5);
 155               		.loc 1 82 0
 156 007a 8091 7B00 		lds r24,123
 157 007e 8F7D      		andi r24,lo8(-33)
 158               	.L12:
 159 0080 8093 7B00 		sts 123,r24
 160 0084 00C0      		rjmp .L9
 161               	.L11:
  72:analogIO.cpp  **** 		return -1;
 162               		.loc 1 72 0
 163 0086 2FEF      		ldi r18,lo8(-1)
 164 0088 3FEF      		ldi r19,lo8(-1)
 165               	.LVL11:
 166               	.L9:
 167               	.LBE2:
  86:analogIO.cpp  **** }
 168               		.loc 1 86 0
 169 008a C901      		movw r24,r18
 170 008c 0895      		ret
 171               	.LFE7:
 173               	.global	_Z9setThermov
 175               	_Z9setThermov:
 176               	.LFB8:
  88:analogIO.cpp  **** {
 177               		.loc 1 88 0
 178               	/* prologue: function */
 179               	/* frame size = 0 */
 180               	/* stack size = 0 */
 181               	.L__stack_usage = 0
 182               	.LBB3:
  89:analogIO.cpp  **** 	setRefInternal();
 183               		.loc 1 89 0
 184 008e 0E94 0000 		call _Z14setRefInternalv
 185               	.LVL12:
  96:analogIO.cpp  ****                 ADMUX = (ADMUX & 0xC0) | (pin&0x0F);
 186               		.loc 1 96 0
 187 0092 ECE7      		ldi r30,lo8(124)
 188 0094 F0E0      		ldi r31,0
 189 0096 8081      		ld r24,Z
 190 0098 807C      		andi r24,lo8(-64)
 191 009a 8760      		ori r24,lo8(7)
 192 009c 8083      		st Z,r24
  99:analogIO.cpp  ****                         ADCSRB |= _BV(MUX5);
 193               		.loc 1 99 0
 194 009e EBE7      		ldi r30,lo8(123)
 195 00a0 F0E0      		ldi r31,0
 196 00a2 8081      		ld r24,Z
 197 00a4 8062      		ori r24,lo8(32)
 198 00a6 8083      		st Z,r24
 199               	.LBE3:
 108:analogIO.cpp  **** }
 200               		.loc 1 108 0
 201 00a8 87E2      		ldi r24,lo8(39)
 202 00aa 90E0      		ldi r25,0
 203 00ac 0895      		ret
 204               	.LFE8:
 206               	.global	_Z7convertv
 208               	_Z7convertv:
 209               	.LFB9:
 111:analogIO.cpp  **** {
 210               		.loc 1 111 0
 211               	/* prologue: function */
 212               	/* frame size = 0 */
 213               	/* stack size = 0 */
 214               	.L__stack_usage = 0
 215               	.LBB4:
 112:analogIO.cpp  **** 	ADCSRA |= 1 << ADEN; //enable ADC
 216               		.loc 1 112 0
 217 00ae 8091 7A00 		lds r24,122
 218 00b2 8068      		ori r24,lo8(-128)
 219 00b4 8093 7A00 		sts 122,r24
 113:analogIO.cpp  **** 	ADCSRA |= 1 << ADSC; //begin a conversion
 220               		.loc 1 113 0
 221 00b8 8091 7A00 		lds r24,122
 222 00bc 8064      		ori r24,lo8(64)
 223 00be 8093 7A00 		sts 122,r24
 224               	.L15:
 116:analogIO.cpp  **** 	while(ADCSRA & (1 << ADSC))
 225               		.loc 1 116 0 discriminator 1
 226 00c2 8091 7A00 		lds r24,122
 227 00c6 86FD      		sbrc r24,6
 228 00c8 00C0      		rjmp .L15
 118:analogIO.cpp  **** 	short result = ADCL;
 229               		.loc 1 118 0
 230 00ca 2091 7800 		lds r18,120
 231               	.LVL13:
 119:analogIO.cpp  **** 	result |= ADCH<<8;
 232               		.loc 1 119 0
 233 00ce 3091 7900 		lds r19,121
 234               	.LVL14:
 121:analogIO.cpp  **** 	ADCSRA &= ~(1<<ADEN);
 235               		.loc 1 121 0
 236 00d2 8091 7A00 		lds r24,122
 237 00d6 8F77      		andi r24,lo8(127)
 238 00d8 8093 7A00 		sts 122,r24
 119:analogIO.cpp  **** 	result |= ADCH<<8;
 239               		.loc 1 119 0
 240 00dc 932F      		mov r25,r19
 241 00de 80E0      		ldi r24,0
 242 00e0 AC01      		movw r20,r24
 243 00e2 422B      		or r20,r18
 244 00e4 9A01      		movw r18,r20
 245               	.LVL15:
 246               	.LBE4:
 123:analogIO.cpp  **** }
 247               		.loc 1 123 0
 248 00e6 C901      		movw r24,r18
 249 00e8 0895      		ret
 250               	.LFE9:
 252               	.global	_Z11analogSetupv
 254               	_Z11analogSetupv:
 255               	.LFB10:
 126:analogIO.cpp  **** {
 256               		.loc 1 126 0
 257               	/* prologue: function */
 258               	/* frame size = 0 */
 259               	/* stack size = 0 */
 260               	.L__stack_usage = 0
 127:analogIO.cpp  **** 	ADCSRA |= (1 << ADPS2) | (1 << ADPS1) | (1 << ADPS0); 
 261               		.loc 1 127 0
 262 00ea EAE7      		ldi r30,lo8(122)
 263 00ec F0E0      		ldi r31,0
 264 00ee 8081      		ld r24,Z
 265 00f0 8760      		ori r24,lo8(7)
 266 00f2 8083      		st Z,r24
 128:analogIO.cpp  **** 	setRefInternal();
 267               		.loc 1 128 0
 268 00f4 0C94 0000 		jmp _Z14setRefInternalv
 269               	.LVL16:
 270               	.LFE10:
 272               	.global	_Z10analogReads
 274               	_Z10analogReads:
 275               	.LFB11:
 131:analogIO.cpp  **** {
 276               		.loc 1 131 0
 277               	.LVL17:
 278               	/* prologue: function */
 279               	/* frame size = 0 */
 280               	/* stack size = 0 */
 281               	.L__stack_usage = 0
 282               	.LBB5:
 132:analogIO.cpp  **** 	if(setPin(me)<0)
 283               		.loc 1 132 0
 284 00f8 0E94 0000 		call _Z6setPins
 285               	.LVL18:
 286 00fc 97FF      		sbrs r25,7
 135:analogIO.cpp  **** 	short result = convert();
 287               		.loc 1 135 0
 288 00fe 0C94 0000 		jmp _Z7convertv
 289               	.LVL19:
 290               	.L19:
 291               	.LBE5:
 292               		.loc 1 137 0
 293 0102 8FEF      		ldi r24,lo8(-1)
 294 0104 9FEF      		ldi r25,lo8(-1)
 295 0106 0895      		ret
 296               	.LFE11:
 298               		.section	.rodata
 301               	CSWTCH.4:
 302 0000 20        		.byte	32
 303 0001 21        		.byte	33
 304 0002 22        		.byte	34
 305 0003 23        		.byte	35
 306 0004 24        		.byte	36
 307 0005 25        		.byte	37
 308 0006 FF        		.byte	-1
 309 0007 FF        		.byte	-1
 310 0008 FF        		.byte	-1
 311 0009 FF        		.byte	-1
 312 000a FF        		.byte	-1
 313 000b 07        		.byte	7
 314 000c 06        		.byte	6
 315 000d 05        		.byte	5
 316 000e 04        		.byte	4
 317 000f 01        		.byte	1
 318 0010 00        		.byte	0
 417               	.Letext0:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 analogIO.cpp
     /tmp/ccXnjSZM.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccXnjSZM.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccXnjSZM.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccXnjSZM.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccXnjSZM.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccXnjSZM.s:11     .text:0000000000000000 _Z6getPins
     /tmp/ccXnjSZM.s:301    .rodata:0000000000000000 CSWTCH.4
     /tmp/ccXnjSZM.s:47     .text:0000000000000020 _Z6setRefs
     /tmp/ccXnjSZM.s:72     .text:0000000000000036 _Z14setRefInternalv
     /tmp/ccXnjSZM.s:88     .text:000000000000003e _Z14setRefExternalv
     /tmp/ccXnjSZM.s:104    .text:0000000000000046 _Z9setRefVCCv
     /tmp/ccXnjSZM.s:120    .text:000000000000004e _Z6setPins
     /tmp/ccXnjSZM.s:175    .text:000000000000008e _Z9setThermov
     /tmp/ccXnjSZM.s:208    .text:00000000000000ae _Z7convertv
     /tmp/ccXnjSZM.s:254    .text:00000000000000ea _Z11analogSetupv
     /tmp/ccXnjSZM.s:274    .text:00000000000000f8 _Z10analogReads

UNDEFINED SYMBOLS
__do_copy_data
